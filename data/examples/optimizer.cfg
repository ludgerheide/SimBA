# Configs for the eBus Toolbox Optimizer
[DEFAULT]
debug_level=0

[SCENARIO]
# Use "" for ids and not ''
exclusion_rots = ["6891228", "6891223", "6895194", "7049422", "1000269", "6891224", "7049423", "6891226", "6895223", "1000278", "6891222", "6923844", "1000276", "1000106", "1000144", "1000184", "6895226"]
exclusion_stations=  []
inclusion_stations= []
#["6650837", "1000579", "7042547", "6940321", "6975646", "6637000", "7042546", "7007025", "6986504", "6940341", "7194150", "6680580", "6891224", "6923844", "6680514", "6986519", "6985436", "1000269", "6985446", "1000184", "6975639", "6680530", "6986499", "7194046", "6985589", "6985431", "6938337", "6938332", "6986494", "6891223", "7042545", "6895223", "6891228", "6680523", "7049422", "6891226", "1000106", "6891222", "6986524", "6986509", "7194145", "6975648", "7007023", "6653824", "6975637", "6895194", "6895226", "6997330", "6986514", "7007024", "6680501", "7007022", "6650848", "7194155"]
#["SIRI01B", "KLNG01B", "SUJH01B", "FLKP01B", "SERZ01B", "UKRL03B", "SDKI03B", "SUSP01B", "UBRS01B", "BER102B", "BUSS01B", "GALS01B", "ALTG02B", "MGGW02B", "SGD02B", "LINH02B", "SURZ23B", "DAHV03B", "BFAE01B", "NOSS01B", "ZIRI03BS", "MAWI01B", "KDSG01B", "ZFHF01B", "SWEL01B", "UEWP02B", "MKZE02B", "UTM07B", "REIM01B", "MEBR01B", "UMOH01B", "UKSP02B", "LUTH01B", "UOSL04B", "FKB03BS", "SLIS02B", "VOUL01B", "MAST04B", "SHDF03B", "SLR07BA", "WFDA01B", "STAS01B", "UHP04BN", "SELS01B", "WERS01B", "SNP01B", "STUT04B", "UMM01B", "BER105B", "ANDZ01B", "UHPU02B", "SUTF01B", "MHDO02B", "SHEN01B", "HAWR01B", "NRPP01B", "SMF03B", "HBF11B", "NAHM04B", "SULB01B", "HOTT01B", "UEWP05B", "UVIN14B", "TITI01B", "AUBT01B", "UDD04B", "MABA02B", "ULEO01B", "SGD01B", "SFOH01B", "NAHM05B", "TEWA03B", "GUTS01B", "UAMD01B", "WOSM01B", "UEWP04B", "HNBG01B", "ALTL01B", "SKD05B", "SUHM04B", "ADMH01B", "KDFS01B", "UTRE01B", "SURZ04B", "PRPL11B", "SBU02B", "AHGR01B", "HENH01B", "JOST01B", "GOST01B", "UFI02B", "PIET06BA", "SIW501B", "SNIK01B", "KOET01B", "ALHS01B", "HBF01B", "SABS01B", "RSNE01B", "SMDF12B", "SMZ07B", "UHPK01B", "SKA01B", "ZOOH01B", "MKZE03B", "SAF01B", "AUBT04B", "AHGR02B", "BER508B", "SSWS17BA", "KHDW01B", "RIGT06BS", "UHAS05B", "USTM09B", "AMOM04B", "TSTR01B", "SUHM09B", "SMNO01B", "UPBA03B", "SULB10B", "MAST06B", "PSDG11BA", "URUD17B", "UMED03B", "SLIS01B", "UAMD06B", "SBAW04B", "UHAS03B", "URUH07B", "FKB01B", "WIDA01B", "ALKL02B", "HBPL01B", "PPAS02B", "OTFR01B", "UFWP01B", "SLBN01B", "UJTC04B", "TORT01B", "INVA01B", "BRIX01B", "SLR09BA", "APPZ03B", "SEYD02B", "URUD04B", "MGGW01B", "SUSP04B", "CMPB01B", "SOSB04B", "ZITT02B", "HAST01B", "SLIS06B", "ISSZ01B", "NEHM03B", "NHRY01B", "HADL01B", "STBH01B", "UBER01B", "TERB04B", "SZEP01B", "GEZE01B", "APPZ07B", "UOHH09B", "FDDM01B", "WKHS03B", "HOTT02B", "SWS03B", "EIPU01B", "SGA02B", "GUTS04B", "SSWS16BA", "SOSB01B", "BER506B", "BFI10BS", "RCHT01B", "UAMD02B", "UKDN06B", "KLCL02B", "ODNH01B", "WKHS02B", "MADF02B", "UWSC01B", "DILL01B", "AMRH04BA", "FOHA01B", "WWSP01B", "FEZ07BS", "SGA08B", "UHP06B", "UWSP03B", "KRNB01B", "QUIB01B", "WIDA02B", "SWS01B", "PCJS02B", "BER505B"]
# 1202 142636:Optimized with 66  stations ####################                         ['AHGR02B', 'APPZ07B', 'AUBT04B', 'BER102B', 'BER506B', 'BER508B', 'BFAE01B', 'BRIX01B', 'BUSS01B', 'CMPB01B', 'GEZE01B', 'HADL01B', 'HAWR01B', 'HBF01B', 'HBF11B', 'KDFS01B', 'KOET01B', 'MAST04B', 'MGGW01B', 'MGGW02B', 'MHDO02B', 'NOSS01B', 'ODNH01B', 'PIET06BA', 'PPAS02B', 'PRPL11B', 'RSNE01B', 'SABS01B', 'SBU02B', 'SKA01B', 'SKD05B', 'SLIS02B', 'SLR07BA', 'SMDF12B', 'SMZ07B', 'SSS02B', 'SSWS16BA', 'SSWS17BA', 'STUT04B', 'SUHM04B', 'SUJH01B', 'SULB01B', 'SULB10B', 'SURZ23B', 'SWEL01B', 'TSTR01B', 'UBER01B', 'UBRS01B', 'UDD04B', 'UEWP02B', 'UEWP04B', 'UEWP05B', 'UHP04BN', 'UHP06B', 'UHPU02B', 'UKDN06B', 'UKRL03B', 'UMM01B', 'UMOH01B', 'UOSL04B', 'USTM09B', 'UWSP03B', 'VOUL01B', 'WKHS03B', 'WSTR01B', 'ZOOH01B']
# 1202 142745:Optimized with 66  stations ####################                         ['AHGR02B', 'APPZ07B', 'AUBT04B', 'BER102B', 'BER506B', 'BER508B', 'BFAE01B', 'BRIX01B', 'BUSS01B', 'CMPB01B', 'EIPU01B', 'GEZE01B', 'HADL01B', 'HAWR01B', 'HBF01B', 'HBF11B', 'KDFS01B', 'KOET01B', 'MAST04B', 'MGGW01B', 'MGGW02B', 'MHDO02B', 'NOSS01B', 'ODNH01B', 'PIET06BA', 'PPAS02B', 'PRPL11B', 'RSNE01B', 'SABS01B', 'SBU02B', 'SKA01B', 'SKD05B', 'SLIS02B', 'SLR07BA', 'SMDF12B', 'SMZ07B', 'SSS02B', 'SSWS16BA', 'SSWS17BA', 'STUT04B', 'SUHM04B', 'SUJH01B', 'SULB01B', 'SULB10B', 'SURZ23B', 'SWEL01B', 'TSTR01B', 'UBER01B', 'UBRS01B', 'UDD04B', 'UEWP02B', 'UEWP04B', 'UEWP05B', 'UHP04BN', 'UHP06B', 'UHPU02B', 'UKDN06B', 'UKRL03B', 'UMM01B', 'UMOH01B', 'UOSL04B', 'USTM09B', 'UWSP03B', 'VOUL01B', 'WKHS03B', 'ZOOH01B']
# 1202 142758:Optimized with 66  stations ####################                         ['AHGR02B', 'ALXM11BA', 'APPZ07B', 'AUBT04B', 'BER506B', 'BER508B', 'BFAE01B', 'BRIX01B', 'BUSS01B', 'CMPB01B', 'EIPU01B', 'GEZE01B', 'HADL01B', 'HAWR01B', 'HBF01B', 'HBF11B', 'KDFS01B', 'KOET01B', 'MAST04B', 'MGGW01B', 'MGGW02B', 'MHDO02B', 'NOSS01B', 'ODNH01B', 'PIET06BA', 'PPAS02B', 'PRPL11B', 'RSNE01B', 'SABS01B', 'SBU02B', 'SKA01B', 'SKD05B', 'SLIS02B', 'SLR07BA', 'SMDF12B', 'SMZ07B', 'SSS02B', 'SSWS16BA', 'SSWS17BA', 'STUT04B', 'SUHM04B', 'SUJH01B', 'SULB01B', 'SULB10B', 'SURZ23B', 'SWEL01B', 'TSTR01B', 'UBER01B', 'UBRS01B', 'UDD04B', 'UEWP02B', 'UEWP04B', 'UEWP05B', 'UHP04BN', 'UHP06B', 'UHPU02B', 'UKDN06B', 'UKRL03B', 'UMM01B', 'UMOH01B', 'UOSL04B', 'USTM09B', 'UWSP03B', 'VOUL01B', 'WKHS03B', 'ZOOH01B']



[VEHICLE]
charge_eff = 0.95
battery_capacity = 400
charging_curve = [[0, 450], [0.8, 296], [0.9, 210], [1, 20]]
charging_power = 250
min_soc=0.05

[OPTIMIZER]
# "quick" or "spiceev"
solver = quick
rebase_scenario = False
run_only_neg=True
remove_impossible_rots=False
# "greedy" or "deep" without ""
opt_type = greedy
# "step-by-step" or "brute" without ""
node_choice=step-by-step
max_brute_loop=5
estimation_threshold = 0.80



[SPECIAL]
decision_tree_path = ""
save_decision_tree = False
reduce_rots = False
# Use "" for ids and not ''
rots = ["6813275","6813275"]


# add later as description
#     :param remove_impossible_rots: repeat optimization without impossible to electrify rotations
#     default=False
#     :type remove_impossible_rots: bool
#
#     :param rebase_scenario: should the given scenario be simulated with the given boundries before
#     optimization or can schedule and scenario be used right away. rebasing can be time consuming
#     but can speed up optimization afterwards and increase optimization efficiency
#     default=False
#     :type rebase_scenario: bool
#
#
#     :param opt_type: Type of the following optimizations ["greedy"]
#     :type opt_type: str
#     :param exclusion_rots: Rotations to be excluded from optimization
#     :type exclusion_rots: set(str)
#     :param inclusion_stations: Stations which have to be electrified
#     :type inclusion_stations: set(str)
#     :param exclusion_stations: Stations to be excluded from optimization, eg. cant be electrified
#     :type exclusion_stations: set(str)

