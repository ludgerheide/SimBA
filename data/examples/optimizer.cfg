# Configs for the eBus Toolbox Optimizer
[DEFAULT]
debug_level=0

[SCENARIO]
# Use "" for ids and not ''
exclusion_rots = []
# a={'0306a_2', '0306a_5', '0306a_3', '0817_2', '0817_4', '0817_1', '0306a_1', '0817_3', '0817_5', '0306a_4'}
# b= ["7003_7", "0817_3", "0817_2", "6003_6", "0817_1", "0306a_3", "0817_4", "0306a_2", "0306a_4", "0306a_5", "0306a_1", "0817_5"]
exclusion_stations=  []
# If using inclusion stations, scenario should be rebased
inclusion_stations= []
standard_opp_station={"type": "opps", "n_charging_stations": 200,"distance_transformer": 50,
        "voltage_level": "MV"}
#Buffered
#["0310a_2", "0310a_3", "0310a_4", "0310a_5", "0413_3", "6310b_6"]
#Spice Ev
#['0717_2', '0310a_5', '7003_7', '0413_3', '0310a_2', '0413_4', '0717_4', '7310a_7', '0310a_3', '0717_5', '6003_6', '0310a_4', '6310b_6', '0413_5', '0717_3']

# BVG
#["1000031","6891224", "6891223", "6891222", "6891228", "689126"]
[PICKLE]
schedule=schedule_buffered_all_oppb.pickle
scenario=scenario_buffered_all_oppb.pickle
args=args_buffered_all_oppb.pickle
# schedule=schedule_buffered_depots_utf.pickle
# scenario=scenario_buffered_depots_utf.pickle
# args=args_buffered_utf.pickle


[VEHICLE]
charge_eff = 0.95
# battery_capacity = 400
# charging_curve = [[0, 450], [0.8, 296], [0.9, 210], [1, 20]]
# charging_power = 250
# min_soc=0.05

[OPTIMIZER]
# Not optional path to outputs of optimizer
output_path=data/private_examples/332_Buffered/optimization
# "quick" or "spiceev"
solver = quick
rebase_scenario = False
pickle_rebased= False
pickle_rebased_name=buffered_rebase_all_electrified
run_only_neg=False

# "greedy" or "deep" without ""
opt_type = deep
# "step-by-step" or "brute" without ""
node_choice=brute
max_brute_loop=70
estimation_threshold = 0.80

# Preferring deps leads to a spice_ev simulation with preferred charging type depots
# Afterwards all negative rotations are swapped to opportunity chargers and optimized
prefer_deps=True

# Removing impossible rotations leads to a quick calculation estimating if rotations are impossible.impossible
# If they are deemed as impossible, they are not optimized but discarded
remove_impossible_rots=True
check_for_must_stations=True
include_must_stations = True



[SPECIAL]
decision_tree_path = ""
save_decision_tree = False
reduce_rots = True
# Use "" for ids and not ''
# Negative Rots in all deps
rots = ["0310b_3", "0317_3", "0308_3", "0301b_5", "0404b_4", "0301b_2", "0802b_5", "0401b_4", "7401_7", "0702b_3", "0307a_3", "0307a_1", "0404a_3", "0711_3", "0817_2", "6002a_6", "6302_6", "6306b_6", "0302a_1", "0308_2", "0811_4", "0307b_5", "0705_5", "0801a_4", "0711_4", "0303_3", "0705_3", "0402_5", "0304_2", "0304_3", "0801a_1", "0314_4", "0002_1", "7310a_7", "0811_3", "6711_6", "0301a_5", "0301b_1", "0403_4", "0310b_4", "0701a_2", "0303_1", "0311a_3", "0711_1", "0317_1", "0318_5", "0305_2", "0402_4", "0002_4", "0403_5", "0801a_3", "0310a_2", "0803b_2", "0314_5", "0702b_5", "0701a_1", "0401b_5", "0005a_5", "0801b_5", "0310a_4", "0311a_5", "0311a_4", "0404b_1", "0014b_2", "0803b_5", "0306a_4", "0726_5", "0318_1", "0005a_2", "0303_5", "0308_4", "0002_3", "0306a_3", "0307a_4", "0701a_4", "0401a_4", "6403_6", "0404a_2", "6309a_6", "0314_3", "0317_4", "0401a_2", "0705_1", "0310b_1", "0701a_5", "0310a_1", "0404a_1", "0302a_5", "6305a_6", "0817_4", "0312a_1", "0301a_2", "0705_4", "0305_1", "0312a_4", "0702b_2", "0302b_5", "0005a_4", "6001a_6", "0003b_1", "0301b_4", "0310a_3", "6003_6", "0302a_2", "0817_3", "0404b_5", "0403_2", "0317_5", "0817_1", "0401b_3", "0003b_3", "0726_1", "0701a_3", "7005_7", "0311a_2", "0307b_3", "0301b_3", "0314_2", "6310b_6", "0803b_3", "0014b_1", "0401a_3", "0306a_1", "0305_5", "6303a_6", "6401_6", "0303_2", "6301_6", "0005a_3", "0404a_4", "0312a_2", "0302a_4", "7402_7", "0401b_2", "0301a_1", "0402_2", "0014b_3", "0307b_1", "0803b_1", "6002b_6", "0303_4", "6310a_6", "0302a_3", "0318_4", "7811_7", "0306a_2", "0312a_3", "0308_5", "0014b_4", "0310a_5", "0319_1", "0310b_5", "0705_2", "0002_2", "7702b_7", "7711_7", "0811_2", "0403_1", "0319_3", "0317_2", "0726_3", "0404a_5", "0726_4", "0307b_2", "6901_6", "0319_4", "0005b_5", "0305_4", "6702b_6", "7002b_7", "0304_5", "0305_3", "0003b_2", "0401b_1", "0801a_5", "0301a_3", "0402_1", "0005a_1", "0319_5", "6306a_6", "0319_2", "0311a_1", "0401a_5", "0003b_5", "0307a_5", "0307a_2", "0301a_4", "0318_3", "0308_1", "0726_2", "0803b_4", "6001b_6", "0401a_1", "0312a_5", "6703b_6", "0711_2", "0811_1", "0702b_1", "0314_1", "0014b_5", "0310b_2", "0404b_2", "0003b_4", "0307b_4", "0304_1", "0306a_5", "0811_5", "0403_3", "0318_2", "0402_3", "0817_5", "0404b_3", "0702b_4", "0711_5", "7003_7", "0002_5", "0304_4", "0801a_2"]



# add later as description
#     :param remove_impossible_rots: repeat optimization without impossible to electrify rotations
#     default=False
#     :type remove_impossible_rots: bool
#
#     :param rebase_scenario: should the given scenario be simulated with the given boundries before
#     optimization or can schedule and scenario be used right away. rebasing can be time consuming
#     but can speed up optimization afterwards and increase optimization efficiency
#     default=False
#     :type rebase_scenario: bool
#
#
#     :param opt_type: Type of the following optimizations ["greedy"]
#     :type opt_type: str
#     :param exclusion_rots: Rotations to be excluded from optimization
#     :type exclusion_rots: set(str)
#     :param inclusion_stations: Stations which have to be electrified
#     :type inclusion_stations: set(str)
#     :param exclusion_stations: Stations to be excluded from optimization, eg. cant be electrified
#     :type exclusion_stations: set(str)

